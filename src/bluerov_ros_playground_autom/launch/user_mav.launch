<?xml version="1.0"?>

<launch>
  <arg name="fcu_url" default="udp://:14550@127.0.0.1:14549"/>
  <arg name="gcs_url" default="udp://:14549@127.0.0.1:14548"/>
  <arg name="video_udp_port" default="5600"/>
  <arg name="system_id" default="255"/>
  <arg name="component_id" default="240"/>
  <arg name="tgt_system" default="1"/>
  <arg name="tgt_component" default="1"/>
  <arg name="pluginlists_yaml" value="$(find bluerov_ros_playground)/launch/mav_pluginlists.yaml"/>
  <arg name="config_yaml" value="$(find mavros)/launch/apm_config.yaml"/>
  <arg name="joy_dev" default="/dev/input/js0"/>
  <arg name="log_output" default="screen"/>

  <node pkg="mavros" type="mavros_node" name="mavros" required="true" clear_params="true" output="$(arg log_output)">
    <param name="fcu_url" value="$(arg fcu_url)"/>
    <param name="gcs_url" value="$(arg gcs_url)"/>
    <param name="system_id" value="$(arg system_id)"/>
    <param name="component_id" value="$(arg component_id)"/>
    <param name="target_system_id" value="$(arg tgt_system)"/>
    <param name="target_component_id" value="$(arg tgt_component)"/>

    <!-- load blacklist, config -->
    <rosparam command="load" file="$(arg pluginlists_yaml)"/>
    <rosparam command="load" file="$(arg config_yaml)"/>
  </node>

  <!-- start the joystick driver -->
  <node respawn="true" pkg="joy" type="joy_node" name="joy_node">
    <param name="dev" type="string" value="$(arg joy_dev)" />
  </node>

  <include file = "$(find robot_localization)/launch/ekf_template.launch"/>

  <node pkg="rosservice" type="rosservice" name="mavros_set_stream" args="call --wait /mavros/set_stream_rate 0 10 1"/>  
  <node pkg="bluerov_ros_playground" type="user_mav" name="user_node" output="$(arg log_output)">
    <param name="video_udp_port" value="$(arg video_udp_port)"/>
  </node>
  
  <node pkg = "bluerov_ros_playground" type = "send_depth.py" name = "send_depth_node" respawn = "true" output = "screen"/>
  <node pkg = "data_r_l" type = "odom.py" name = "pub_odometry" respawn = "true" output = "screen"/>
  <node pkg = "data_r_l" type = "quat_to_euler.py" name = "quaternion_to_euler" respawn = "true" output = "screen"/>
  <node pkg = "waterlinked_ros_driver" type = "waterlinked_ros_node.py" name = "waterlinked" respawn = "true" output = "screen"/>
</launch>
